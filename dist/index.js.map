{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reimf = require( '@stdlib/complex-reimf' );\n\n\n// MAIN //\n\n/**\n* Tests whether two single-precision complex floating-point numbers are not equal.\n*\n* @param {Complex64} z1 - first complex number\n* @param {Complex64} z2 - second complex number\n* @returns {boolean} result\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32' );\n*\n* var z1 = new Complex64( 5.0, 3.0 );\n* var z2 = new Complex64( 5.0, -3.0 );\n*\n* var v = isNotEqualf( z1, z2 );\n* // returns true\n*/\nfunction isNotEqualf( z1, z2 ) {\n\tvar parts1 = reimf( z1 );\n\tvar parts2 = reimf( z2 );\n\treturn (\n\t\tparts1[ 0 ] !== parts2[ 0 ] ||\n\t\tparts1[ 1 ] !== parts2[ 1 ]\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNotEqualf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether two single-precision complex floating-point numbers are not equal.\n*\n* @module @stdlib/complex-base-assert-is-not-equalf\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32' );\n* var isNotEqualf = require( '@stdlib/complex-base-assert-is-not-equalf' );\n*\n* var z1 = new Complex64( 5.0, 3.0 );\n* var z2 = new Complex64( 5.0, -3.0 );\n*\n* var v = isNotEqualf( z1, z2 );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,uBAAwB,EAqB7C,SAASC,EAAaC,EAAIC,EAAK,CAC9B,IAAIC,EAASJ,EAAOE,CAAG,EACnBG,EAASL,EAAOG,CAAG,EACvB,OACCC,EAAQ,CAAE,IAAMC,EAAQ,CAAE,GAC1BD,EAAQ,CAAE,IAAMC,EAAQ,CAAE,CAE5B,CAKAN,EAAO,QAAUE,ICjBjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "reimf", "isNotEqualf", "z1", "z2", "parts1", "parts2", "main"]
}
