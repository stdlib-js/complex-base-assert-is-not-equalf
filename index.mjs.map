{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reimf from '@stdlib/complex-reimf';\n\n\n// MAIN //\n\n/**\n* Tests whether two single-precision complex floating-point numbers are not equal.\n*\n* @param {Complex64} z1 - first complex number\n* @param {Complex64} z2 - second complex number\n* @returns {boolean} result\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32';\n*\n* var z1 = new Complex64( 5.0, 3.0 );\n* var z2 = new Complex64( 5.0, -3.0 );\n*\n* var v = isNotEqualf( z1, z2 );\n* // returns true\n*/\nfunction isNotEqualf( z1, z2 ) {\n\tvar parts1 = reimf( z1 );\n\tvar parts2 = reimf( z2 );\n\treturn (\n\t\tparts1[ 0 ] !== parts2[ 0 ] ||\n\t\tparts1[ 1 ] !== parts2[ 1 ]\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNotEqualf;\n"],"names":["isNotEqualf","z1","z2","parts1","reimf","parts2"],"mappings":";;wFA2CA,SAASA,EAAaC,EAAIC,GACzB,IAAIC,EAASC,EAAOH,GAChBI,EAASD,EAAOF,GACpB,OACCC,EAAQ,KAAQE,EAAQ,IACxBF,EAAQ,KAAQE,EAAQ,EAE1B"}